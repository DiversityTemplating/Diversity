{
  "$schema":     "http://json-schema.org/draft-04/schema#",
  "description": "A Diversity Component specification",
  "type":        "object",
  "properties": {

    "name": {
      "description": "Name of component.",
      "type":        "string",
      "pattern":     "^[a-zA-Z0-9_-]+$"
    },

    "version": {
      "description": "Component version, simple semver style.",
      "$ref":        "#/definitions/semver"
    },

    "grouping": {
      "description": "List of groups this component belongs to.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },

    "template": {
      "description": "HTML (mustache) filename, relative base dir.  The file must exist in component directory.",
      "anyOf": [
        { "$ref": "#/definitions/filename" },
        {
          "type":   "string",
          "format": "uri"
        },
        {
          "type":   "array",
          "items": {
            "type": "string",
            "anyOf": [
              { "$ref": "#/definitions/filename" },
              { "format": "uri"                  }
            ]
          }
        }
      ]
    },

    "style": {
      "title":       "CSS",
      "description": "CSS filename or array of filenames, relative base dir.",
      "oneOf": [
        { "$ref": "#/definitions/filename" },
        { "type": "array", "items": { "$ref": "#/definitions/filename" } }
      ]
    },

    "script": {
      "description": "JS filename or array of filenames, relative base dir.",
      "oneOf": [
        { "$ref": "#/definitions/filename" },
        { "type": "array", "items": { "$ref": "#/definitions/filename" } }
      ]
    },

    "dependencies": {
      "description": "Dependencies are given with component name as key, and version or URL as value.",
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9_-]+$": {
          "type": "string",
          "oneOf": [
            {
              "description": "Version number.",
              "$ref":        "#/definitions/semver_req"
            },
            {
              "description": "The URL to a publically available component.",
              "format":      "uri"
            }
          ]
        }
      }
    },

    "i18n": {
      "description": "An object pointing to the translation potfiles for admin and frontend.",
      "type":        "object",
      "properties": {
        "admin": {
          "description": "potfile for admin strings: translatable strings in diversity.json and option schema.",
          "$ref":        "#/definitions/filename",
          "pattern":     "\\.pot$"
        },
        "frontend": {
          "description": "potfile for frontend strings: translatable strings in the rendered component.",
          "$ref":        "#/definitions/filename",
          "pattern":     "\\.pot$"
        }
      }
    },

    "l10n": {
      "description": "An object pointing to po-files for each language.",
      "type":        "object",
      "patternProperties": {
        "^[a-z]{2}(-[A-Z]{2})?$": {
          "type": "object",
          "properties": {
            "admin": {
              "description": "po-file for admin strings.",
              "$ref":        "#/definitions/filename",
              "pattern":     "\\.po$"
            },
            "frontend": {
              "description": "po-file for frontend strings.",
              "$ref":        "#/definitions/filename",
              "pattern":     "\\.po$"
            }
          }
        }
      }
    },

    "context": {
      "description": "API queries to feed to mustache, in JSON-RPC 2.0-format (omitting id and jsonrpc keys).",
      "type":        "object",
      "additionalProperties": {
        "type": "object",
        "required": [ "method" ],
        "properties": {
          "method": { "type": "string" },
          "params": { "type": [ "array", "object" ] }
        }
      }
    },

    "settings": {
      "description": "Either a filename of a JSON Schema, or the JSON Schema included directly.",
      "oneOf": [
        { "$ref": "http://json-schema.org/draft-04/schema#" },
        { "$ref": "#/definitions/filename" }
      ]
    },

    "settingsForm": {
      "description": "A form defintion for the settings schema",
      "type": "array",
      "items": {
        "anyOf": [
          { "type": "string" },
          { "type": "object", "additionalProperties": true }
        ]
      }
    },

    "angular": {
      "description": "If the component uses AngularJS, this must be set to true, or to a module-name that is specified in this component.",
      "oneOf": [
        { "type": "boolean", "enum": [true] },
        { "type": "string" }
      ]
    },

    "title": {
      "description": "Component title (for administration gui).",
      "type":        "string"
    },

    "description": {
      "description": "Component description HTML (for administration gui).",
      "type":        "string",
      "format":      "html"
    },

    "thumbnail": {
      "description": "URL to thumbnail (for administration gui).",
      "type":        "string",
      "format":      "uri"
    }

  },

  "required":             ["name", "version"],
  "additionalProperties": false,

  "definitions": {
    "semver":    {
      "title":       "Semantic version",
      "description": "Semver version specification.",
      "type": "string",
      "pattern":     "^\\bv?(?:0|[1-9][0-9]*)\\.(?:0|[1-9][0-9]*)\\.(?:0|[1-9][0-9]*)(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?\\b$"
    },
    "semver_req": {
      "title":       "Semver requirement",
      "description": "Requirement for dependency specification (too complex for regex).",
      "type":        "string"
    },
    "pageTypes": { "type": "string", "enum": [ "article", "articlegroup", "checkout", "basket", "custom", "start", "search" ] },
    "filename":  { "type": "string", "pattern": "[^/?*:;{}\\\\]+$", "format": "filename" }
  }
}
